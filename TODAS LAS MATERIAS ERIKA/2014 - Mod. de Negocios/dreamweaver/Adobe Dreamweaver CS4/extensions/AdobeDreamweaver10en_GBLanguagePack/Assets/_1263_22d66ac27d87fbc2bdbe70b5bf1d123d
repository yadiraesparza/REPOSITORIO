<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!--#config errmsg="" --><!-- saved from url=(0022)http://help.adobe.com/ -->
<html lang="en-us">
    <head>
        <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
        <meta name="lang" content="en-us" />
        <meta name="area" content="livedocs" />
        <title>Dreamweaver CS4 * Server-side XSL transformations</title>
        <meta name="product" content="$product" />
        <meta name="productv" content="" />
        <meta name="keywords" content="" />
        <script type="text/javascript" language="Javascript" charset="UTF-8"><!--[CDATA[
        var currentTreeNode = "WScbb6b82af5544594822510a94ae8d65-7a61a.html";
// ]]--></script>
<script src="terms.js" type="text/javascript" language="Javascript" charset="UTF-8">...</script> <script src="help.js" type="text/javascript" language="Javascript" charset="UTF-8">...</script>  <script src="utilities.js" type="text/javascript" language="Javascript" charset="UTF-8">...</script> <script src="event.js" type="text/javascript" language="Javascript" charset="UTF-8">...</script> <script src="treeview.js" type="text/javascript" language="Javascript" charset="UTF-8">...</script> <script src="toc.js" language="Javascript" type="text/javascript" charset="UTF-8">..</script> 
<script type="text/javascript">
<!--[CDATA[
var headId = document.getElementsByTagName("head")[0];         
if (use_ie_6_behavior) {
    var linkId = document.createElement("link");
    linkId.href = "content-ie6.css";
    linkId.rel = "stylesheet";
    linkId.type = "text/css";
    headId.appendChild(linkId);
}
// ]]-->
</script>
<!--#include virtual="/livedocs/ssi/globalheader.ssi" -->
        <link rel="stylesheet" type="text/css" href="tree.css" />
        <link rel="stylesheet" type="text/css" href="content-fonts.css" />
        <link rel="stylesheet" type="text/css" href="content-hyperlinks.css" />
        <link rel="stylesheet" type="text/css" href="content.css" />
        <link rel="stylesheet" type="text/css" href="localeSpecific.css" />
    </head>
    <body id="content_body" onload="window.focus();">
        <a name="top"></a><div id="mnemonic">
            <div class="Dreamweaver"><table><tr><td class="banner">Dreamweaver CS4</td><td class="pod"><img src="images/PDF.gif" width="16" height="16" hspace="15" valign="50%" />&#160;&#160;
                     <a title="PDF" href="http://help.adobe.com/en_US/Dreamweaver/10.0_Using/dreamweaver_cs4_help.pdf">
                         PDF (adobe.com) 
                    </a></td></tr></table></div>
        </div>
        <div id="searchbar">
<!-- BEGIN SEARCH CONTENT -->
            <form class="search_form" id="search" name="search" action="search.html" target="_self">
                <img src="images/search.png" />
<script type="text/javascript">
<!--[CDATA[
function clearSearch(){
    if (document.search.q.value == terms_AHV_SEARCH_BUTTON){document.search.q.value = ""}; 
}
document.write('<input class=\"search_input\" \
        name=\"q\" \
        id=\"q\" \
        type=\"text\" \
        maxlength=\"256\" \
        value=\"' + terms_AHV_SEARCH_BUTTON + '\" onclick=\"clearSearch()\"><\/input>'); 
// ]]-->


</script> 
            </form>
        </div>
<!-- BEGIN PAGE CONTENT WRAPPER -->
        <div id="page_content_wrapper">
<!-- BEGIN PAGE WRAPPER -->
<table id="page_content_table">
<tr>
<td id="col1">
<!-- BEGIN IONCOMMENTCOUNT -->
            <div id="ionComCount">
            </div>
<!-- END IONCOMMENTCOUNT -->
<!-- BEGIN GROUP TOC WRAPPER -->
            <div id="group_toc"><p>Dreamweaver CS4 Resources</p><ul><li><p><a href="../../Dreamweaver/10.0/index.html" target="_blank">Using
Dreamweaver CS4</a></p>
</li><li><p><a href="http://help.adobe.com/en_US/Dreamweaver/10.0_Extending/index.html" target="_blank">Extending Dreamweaver CS4 (adobe.com)</a></p>
</li><li><p><a href="http://help.adobe.com/en_US/Dreamweaver/10.0_API_Ref/index.html" target="_blank">Dreamweaver API Reference (adobe.com)</a></p>
</li></ul></div>
<!-- END GROUP TOC WRAPPER -->
<!-- BEGIN NAV WRAPPER -->
            <div id="group_toc">
<script type="text/javascript">
<!--[CDATA[
if ( typeof(terms_BOOK_SHORT) != 'undefined' ) {
  document.write("<p>" + terms_BOOK_SHORT + "<\/p>");
}
// ]]-->


</script> 
            </div>
            <div id="nav_content">
            </div>
<!-- END NAV WRAPPER -->
</td>
<td id="col2">
<!-- BEGIN CONTENT WRAPPER -->
<!-- BEGIN BREADCRUMBS -->
            
            <div id="breadcrumb">
                
<ul class="navigation"><li class="prev"><a accesskey="p" class="prev" href="WScbb6b82af5544594822510a94ae8d65-7a60a.html" title="Using XML and XSL with web pages"><img src="images/blank.gif" alt="Previous" width="17" height="17" /></a></li><li class="next"><a accesskey="n" class="next" href="WScbb6b82af5544594822510a94ae8d65-7a5ea.html" title="Client-side XSL transformations"><img src="images/blank.gif" alt="Next" width="17" height="17" /></a></li></ul><div class="hierarchy"><a href="WScbb6b82af5544594822510a94ae8d65-7a62a.html">Displaying XML data with XSLT</a> /
     <a href="WScbb6b82af5544594822510a94ae8d65-7a61a.html"><b>About XML and XSLT</b></a> 
     </div>

            </div>
<!-- END BREADCRUMBS -->
            <div id="content_wrapper">
<!-- BEGIN PAGE TITLE -->
                <h1>
                    Server-side XSL transformations
                </h1>
<!-- END PAGE TITLE -->
                <div><p>Dreamweaver provides
methods for creating XSLT pages that let you perform server-side
XSL transformations. When an application server performs the XSL transformation,
the file containing the XML data can reside on your own server, or
anywhere else on the web. Additionally, any browser can display
the transformed data. Deploying pages for server-side transformations,
however, is somewhat complex, and requires that you have access
to an application server.</p>
<p>When
working with server-side XSL transformations, you can use Dreamweaver to create XSLT pages that generate
full HTML documents (entire XSLT pages), or XSLT fragments that
generate a portion of an HTML document. An entire XSLT page is similar
to a regular HTML page. It contains a <samp class="codeph">&lt;body&gt;</samp> tag
and a <samp class="codeph">&lt;head&gt;</samp> tag, and lets you display a
combination of HTML and XML data on the page. An XSLT fragment is
a piece of code, used by a separate document, that displays formatted
XML data. Unlike an entire XSLT page, it is an independent file
that contains no <samp class="codeph">&lt;body&gt;</samp> or <samp class="codeph">&lt;head&gt;</samp> tag.
If you want to display XML data on a page of its own, you would
create an entire XSLT page, and bind your XML data to it. If, on
the other hand, you wanted to display XML data in a particular section
of an existing dynamic page—for example, a dynamic home page for
a sporting goods store, with sports scores from an RSS feed displayed
on one side of the page—you would create an XSLT fragment and insert
a reference to it in the dynamic page. Creating XSLT fragments,
and using them in conjunction with other dynamic pages to display
XML data, is the more common scenario.</p>
<p>The
first step in creating these types of pages is to create the XSLT
fragment. It is a separate file that contains the layout, formatting,
and so on of the XML data that you eventually want to display in
the dynamic page. Once you create the XSLT fragment, you insert
a reference to it in your dynamic page (for example, a PHP or ColdFusion
page). The inserted reference to the fragment works much like an Server
Side Include (SSI) — the formatted XML data (the fragment) resides
in a separate file, while in Design view, a placeholder for the
fragment appears on the dynamic page itself. When a browser requests
the dynamic page containing the reference to the fragment, the server
processes the included instruction and creates a new document in
which the formatted contents of the fragment appear instead of the
placeholder.</p>
<div class="fignone"><a href="#" onclick="return showHideImage('xml_workflow', this);">View full size graphic</a><img alt="" id="xml_workflow" src="images/xml_workflow.png" /><div class="figdesc"></div><br /><dl><dt class="dlterm">1.</dt>
<dd>Browser requests dynamic page</dd><p class="dlseparator"></p><dt class="dlterm">2.</dt>
<dd>Web server
finds page and passes it to  application server</dd><p class="dlseparator"></p><dt class="dlterm">3.</dt>
<dd>Application
server scans page for instructions and gets XSLT fragment</dd><p class="dlseparator"></p><dt class="dlterm">4.</dt>
<dd>Application
server performs transformation (reads XSLT fragment, gets and formats
xml data)</dd><p class="dlseparator"></p><dt class="dlterm">5.</dt>
<dd>Application server inserts
transformed fragment into page and passes it back to the web server</dd><p class="dlseparator"></p><dt class="dlterm">6.</dt>
<dd>Web server
sends finished page to browser</dd><p class="dlseparator"></p></dl>
</div><p>You
use the XSL Transformation server behavior to insert the reference
to an XSLT fragment in a dynamic page. When you insert the reference, Dreamweaver generates an includes/MM_XSLTransform/
folder in the site’s root folder that contains a runtime library
file. The application server uses the functions defined in this
file when transforming the specified XML data. The file is responsible
for fetching the XML data and XSLT fragments, performing the XSL
transformation, and outputting the results on the web page.</p>
<p>The file containing the XSLT fragment, the XML file containing
your data, and the generated run-time library file must all be on
the server for your page to display correctly. (If you select a
remote XML file as your data source—one from an RSS feed, for example—that
file must of course reside somewhere else on the Internet.)</p>
<p>You can also use Dreamweaver to create
entire XSLT pages for use with server-side transformations. An entire
XSLT page works in exactly the same way as an XSLT fragment, only
when you insert the reference to the entire XSLT page using the
XSL Transformation server behavior, you are inserting the full contents of
an HTML page. Thus, the dynamic page (the .cfm, .php, or .asp page
that acts as the container page) must be cleared of all HTML before
you insert the reference.</p>
<p>Dreamweaver supports XSL transformations
for ColdFusion, ASP, and PHP pages.</p>
<div class="note"><span class="notetitle">Note:  </span>Your server must be correctly configured to perform server-side
transformations. For more information, contact your server administrator,
or visit <a href="http://www.adobe.com/go/dw_xsl" target="_blank">www.adobe.com/go/dw_xsl</a>.</div>
</div>

                <div id="related">
                    <div class="separator">&#160;</div>
                    <div><p>&#160;<a href="WScbb6b82af5544594822510a94ae8d65-7a5ba.html">Performing XSL transformations on the server</a></p>
</div>
                    
                </div>
                <div id="footer">
                    <p><img src="images/Community.png" />&#160;<a title="community help (adobe.com)" href="http://www.adobe.com/go/lr_Dreamweaver_community_en">community help (adobe.com)</a></p>
<!-- BEGIN IONCOMMENTS -->
                    <div id="ionComHere">
                    </div>
<!-- END IONCOMMENTS -->
<!--#include virtual="ionComments.ssi" -->
                    <p id="creativecommons"><a href="http://creativecommons.org/licenses/by-nc-sa/3.0/" id="creativecommons_text"><img id="creativecommons_img" src="images/CC.png" alt="This work is licensed under a Creative Commons Attribution-Noncommercial-Share Alike 3.0 Unported License" /></a></p>
                </div>
            </div>
<!-- END CONTENT WRAPPER -->
</td>
</tr>
</table>
        </div>
<!-- END PAGE CONTENT WRAPPER -->
<script type="text/javascript">
<!--[CDATA[
scrollToNameAnchor();
// ]]-->
</script> 
<!--#include virtual="/livedocs/ssi/globalfooter.ssi" -->
<!--#include virtual="/ubi/analytics/analytics_ssi.html" -->
    </body>
</html>